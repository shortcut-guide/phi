name: Deploy to VPS

on:
  push:
    branches: [develop, staging, main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set variables by branch
        id: vars
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "dir=phis-develop" >> $GITHUB_OUTPUT
            echo "env=develop" >> $GITHUB_OUTPUT
            echo "branch=develop" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "dir=phis-staging" >> $GITHUB_OUTPUT
            echo "env=staging" >> $GITHUB_OUTPUT
            echo "branch=staging" >> $GITHUB_OUTPUT
          else
            echo "dir=phis-production" >> $GITHUB_OUTPUT
            echo "env=production" >> $GITHUB_OUTPUT
            echo "branch=main" >> $GITHUB_OUTPUT
          fi

      - name: Write SSH key
        run: |
          echo "${{ secrets.VPS_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy via SSH
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{secrets.VPS_USER}}@${{ secrets.VPS_HOST }} << EOF
            set -e
            git config --global --add safe.directory /var/www/${{ steps.vars.outputs.dir }}
            cd /var/www/${{ steps.vars.outputs.dir }}
            git fetch origin
            git reset --hard origin/${{ steps.vars.outputs.branch }}
            cp backend/.env.${{ steps.vars.outputs.env }} backend/.env
            cd backend
            npm install
            pm2 restart ${{ steps.vars.outputs.dir }} || pm2 start npm --name "${{ steps.vars.outputs.dir }}" -- start
          EOF
      
      - name: Deploy maintenance
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            cd /var/www/maintenance
            git pull phis develop
            # maintenance/maintenance配下をmaintenance直下に移動（隠しファイルも含めて）
            if [ -d maintenance ]; then
              shopt -s dotglob
              mv maintenance/* .
              shopt -u dotglob
              rm -rf maintenance
            fi
            # deploy-config.shを一時ディレクトリにコピーして実行（絶対パス指定）
            rm -f /tmp/deploy-config.sh
            cp /var/www/maintenance/deploy-config.sh /tmp/deploy-config.sh
            bash /tmp/deploy-config.sh
            
      - name: Deploy webhook scripts
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "webhook/maintenance.js"
          target: "/var/www/webhook/"