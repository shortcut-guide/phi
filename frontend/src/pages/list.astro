---
import { useEffect, useState } from "preact/hooks";
import { tw } from "tw-astasy";

const [data, setData] = useState([]);
const [search, setSearch] = useState("");
const [page, setPage] = useState(1);
const [sort, setSort] = useState("uploaded_at");
const [order, setOrder] = useState("desc");

useEffect(() => {
    const fetchData = async () => {
        const res = await fetch(`/api/puppeteer/data?search=${search}&page=${page}&sort=${sort}&order=${order}`);
        const result = await res.json();
        setData(result.contents);
    };
    fetchData();
}, [search, page, sort, order]);

const gridContainer = tw`
  grid grid-cols-3 gap-4 p-4 border-b border-gray-300 bg-white shadow-md rounded-md dark:bg-gray-800
`;
const gridHeader = tw`
  font-bold bg-gray-100 p-4 text-gray-800 dark:bg-gray-700 dark:text-white
`;
const gridItem = tw`
  p-4 border-b border-gray-200 text-gray-700 dark:text-gray-300
`;
const actions = tw`
  flex space-x-4
`;
const inputStyle = tw`
  formkit-input w-full max-w-md
`;
const buttonStyle = tw`
  bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700 transition
`;
---

<html>
    <head>
        <title>Puppeteerデータ管理</title>
    </head>
    <body class="bg-gray-100 dark:bg-gray-900 p-6">
        <h3 class="text-2xl font-bold mb-4 text-gray-800 dark:text-white">Puppeteer JSONデータ管理</h3>
        <div class="flex space-x-4 mb-4">
            <input class={inputStyle} type="text" placeholder="検索" onInput={(e) => setSearch(e.target.value)} />
            <button class={buttonStyle} onClick={() => setOrder(order === "desc" ? "asc" : "desc")}>並び替え: {order}</button>
        </div>

        <div class={gridContainer}>
            <div class={gridHeader}>ECサイト</div>
            <div class={gridHeader}>アップロード日時</div>
            <div class={gridHeader}>操作</div>
        </div>

        {data.map(item => (
            <div class={gridContainer}>
                <div class={gridItem}>{item.ec_site}</div>
                <div class={gridItem}>{new Date(item.uploaded_at).toLocaleString()}</div>
                <div class={gridItem} class={actions}>
                    <a href={`/edit?id=${item.id}`} class="text-blue-500 hover:underline">編集</a>
                    <button onClick={() => handleDelete(item.id)} class="text-red-500 hover:underline">削除</button>
                </div>
            </div>
        ))}

        <div class="flex justify-between mt-4">
            <button class={buttonStyle} onClick={() => setPage(page - 1)} disabled={page <= 1}>前へ</button>
            <button class={buttonStyle} onClick={() => setPage(page + 1)}>次へ</button>
        </div>
    </body>
</html>